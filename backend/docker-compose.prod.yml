version: '3.8'

services:
  # Production Backend API
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: production
    container_name: sla-platform-backend-prod
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=SLA Digital Unified Platform - Production
      - NEW_RELIC_ENABLED=true
      - LOG_LEVEL=info
      - LOG_FILE_ENABLED=true
      - CORS_ORIGIN=${CORS_ORIGIN}
      - SLA_API_USERNAME=${SLA_API_USERNAME}
      - SLA_API_PASSWORD=${SLA_API_PASSWORD}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
    ports:
      - "3001:3001"
    volumes:
      - ./logs:/app/logs
    networks:
      - sla-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sla-platform-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - sla-network-prod
    depends_on:
      - backend
    restart: unless-stopped

networks:
  sla-network-prod:
    driver: bridge